/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define NOMOD_L 1
#define NUM_L 2
#define SYM_L 3
#define NAV_L 4
#define BLE_L 5

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hml: homerow_mods_left  {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32>;
        };
        hmr: homerow_mods_right  {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        nav_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
        ble_layer {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <

&kp Q          &kp W        &kp E         &kp R         &kp T          &kp Y            &kp U         &kp I         &kp O        &kp P
&hml LGUI A    &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G          &kp H            &hmr RSHFT J  &hmr RCTRL K  &hmr LALT L  &hmr LGUI COLON
&lt NOMOD_L Z  &kp X        &kp C         &kp V         &kp B          &kp N            &kp M         &kp COMMA     &kp DOT      &kp ESC
                                          &kp BSPC      &lt NUM_L TAB  &lt SYM_L ENTER  &kp SPACE

            >;
        };

        nomod_layer {
            bindings = <

&trans  &trans  &trans  &trans  &trans   &trans     &trans  &trans  &trans  &trans
&kp A   &kp S   &kp D   &kp F   &trans   &trans     &kp J   &kp K   &kp L   &kp COLON
&trans  &trans  &trans  &trans  &trans   &trans     &trans  &trans  &trans  &kp CAPS
                        &trans  &kp TAB  &kp ENTER  &trans

            >;
        };

        num_layer {
            bindings = <

&kp N1       &kp N2       &kp N3        &kp PLUS         &kp MINUS  &none      &none      &none      &none     &none
&hml LGUI N4  &hml LALT N5  &hml LCTRL N6  &hml LSHFT EQUAL  &kp PRCNT  &none      &kp RSHFT  &kp RCTRL  &kp LALT  &kp LGUI
&kp N7       &kp N8       &kp N9        &kp N0           &none      &none      &none      &kp LT     &kp GT    &none
                                        &trans           &trans     &trans     &trans

            >;
        };

        sym_layer {
            bindings = <

&kp GRAVE    &kp DQT       &kp LBRC        &kp LPAR        &kp LBKT  &kp EXCL  &kp STAR        &kp AMPS        &none           &kp NUHS
&hml LGUI AT  &hml LALT SQT  &hml LCTRL RBRC  &hml LSHFT RPAR  &kp RBKT  &kp HASH  &hmr RSHFT CARET &hmr RCTRL DLLR  &hmr LALT UNDER  &hmr LGUI SEMI
&none        &none         &none           &kp TILDE       &none     &kp BSLH  &kp PIPE        &kp FSLH        &kp QMARK       &none
                                           &trans          &trans    &trans    &trans

            >;
        };

        nav_layer {
            bindings = <

&kp F1       &kp F2       &kp F3        &kp F12        &none    &kp INS   &kp PG_DN     &kp PG_UP       &kp DEL         &kp PSCRN
&hml LGUI F4  &hml LALT F5  &hml LCTRL F6  &hml LSHFT F10  &kp F11  &kp LEFT  &hmr RSHFT DOWN  &hmr RCTRL UP  &hmr LALT RIGHT  &hmr LGUI SLCK
&kp F7       &kp F8       &kp F9        &none          &none    &none     &kp HOME      &kp END         &kp SYSREQ      &kp PAUSE_BREAK
                                        &trans         &trans   &trans    &trans

            >;
        };

        ble_layer {
            bindings = <

&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none         &none   &none  &none  &none  &none  &none
&bt BT_SEL 4  &none         &none         &bt BT_CLR    &none   &none  &none  &none  &none  &none
&none         &none         &none         &bt BT_SEL 0  &none   &none  &none  &none  &none  &trans
                            &trans        &trans        &trans  &trans
            >;
        };
    };
};
