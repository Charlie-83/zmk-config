/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define NOMOD_L 1
#define NUM_L 2
#define SYM_L 3
#define NAV_L 4
#define BLE_L 5
#define ASE_L 6
#define ASE2_L 7

&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods_right  {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <200>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        nav_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <

&kp Q          &kp W       &kp E        &kp R        &kp T          &kp Y            &kp U        &kp I        &kp O       &kp P
&hm LGUI A     &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G          &kp H            &hm RSHFT J  &hm RCTRL K  &hm LALT L  &hm LGUI COLON
&lt NOMOD_L Z  &kp X       &kp C        &kp V        &kp B          &kp N            &kp M        &kp COMMA    &kp DOT     &kp ESC
                                        &kp SPACE    &lt NUM_L TAB  &lt SYM_L ENTER  &kp BSPC

            >;
        };

        nomod_layer {
            bindings = <

&trans  &trans  &trans  &trans  &trans   &trans     &trans  &trans  &trans  &trans
&kp A   &kp S   &kp D   &kp F   &trans   &trans     &kp J   &kp K   &kp L   &kp COLON
&trans  &trans  &trans  &trans  &trans   &trans     &trans  &trans  &trans  &kp CAPS
                        &trans  &kp TAB  &kp ENTER  &trans

            >;
        };

        num_layer {
            bindings = <

&kp N1       &kp N2       &kp N3        &kp PLUS         &kp MINUS  &none     &none      &none      &none     &none
&hm LGUI N4  &hm LALT N5  &hm LCTRL N6  &hm LSHFT EQUAL  &kp PRCNT  &none     &kp RSHFT  &kp RCTRL  &kp LALT  &kp LGUI
&kp N7       &kp N8       &kp N9        &kp N0           &none      &none     &none      &kp LT     &kp GT    &none
                                        &none            &trans     &trans    &none

            >;
        };

        sym_layer {
            bindings = <

&kp GRAVE    &kp DQT       &kp LBRC        &kp LPAR        &kp LBKT  &kp EXCL  &kp STAR         &kp AMPS        &none           &kp NUHS
&hm LGUI AT  &hm LALT SQT  &hm LCTRL RBRC  &hm LSHFT RPAR  &kp RBKT  &kp HASH  &hm RSHFT CARET  &hm RCTRL DLLR  &hm LALT UNDER  &hm LGUI SEMI
&none        &none         &none           &kp TILDE       &none     &kp BSLH  &kp PIPE         &kp FSLH        &kp QMARK       &none
                                           &none           &trans    &trans    &none

            >;
        };

        nav_layer {
            bindings = <

&kp F1       &kp F2       &kp F3        &kp F12        &none       &kp INS    &kp PG_DN        &kp PG_UP      &kp DEL          &kp PSCRN
&hm LGUI F4  &hm LALT F5  &hm LCTRL F6  &hm LSHFT F10  &kp F11     &kp LEFT   &hm RSHFT DOWN   &hm RCTRL UP   &hm LALT RIGHT   &hm LGUI SLCK
&kp F7       &kp F8       &kp F9        &none          &tog ASE_L  &mo BLE_L  &kp HOME         &kp END        &kp SYSREQ       &kp PAUSE_BREAK
                                        &none          &trans      &trans     &none

            >;
        };

        ble_layer {
            bindings = <

&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none         &none   &none  &none  &none  &none  &none
&bt BT_SEL 4  &none         &none         &bt BT_CLR    &none   &none  &none  &none  &none  &none
&none         &none         &none         &bt BT_SEL 0  &trans  &none  &none  &none  &none  &none
                            &none         &trans        &trans  &none
            >;
        };

        ase_layer_1 {
            bindings = <

&kp LCTRL   &kp W  &kp E  &kp R      &kp T       &none       &none  &none  &none  &none
&kp LSHIFT  &kp S  &kp D  &kp F      &kp G       &none       &none  &none  &none  &none
&kp LALT    &kp X  &kp C  &kp V      &kp B       &none       &none  &none  &none  &none
                          &kp SPACE  &sl ASE2_L  &tog ASE_L  &none
            >;
        };

        ase_layer_2 {
            bindings = <

&kp LCTRL   &kp Q  &kp Y  &kp U      &kp I    &none  &none  &none  &none  &none
&kp LSHIFT  &kp A  &kp H  &kp J      &kp K    &none  &none  &none  &none  &none
&kp LALT    &kp Z  &kp N  &kp M      &kp DEL  &none  &none  &none  &none  &none
                          &kp SPACE  &kp TAB  &none  &none
            >;
        };
    };
};
